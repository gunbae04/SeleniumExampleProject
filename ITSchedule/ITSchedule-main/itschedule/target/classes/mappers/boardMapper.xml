<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.its.mapper.BoardMapper">

  	<select id="getBoardList"  parameterType="hashMap" resultType="com.its.vo.BoardVo">
 		SELECT
 		   	bd.`id` AS boardId,
  		  	bd.`member_id` AS memberId,
  		  	bd.`title`,
  		  	bd.`content`,
  		  	bd.`status`,
  		  	DATE_ADD(bd.`updated`, INTERVAL +9 HOUR) AS updated,
  		  	DATE_ADD(bd.`created`, INTERVAL +9 HOUR) AS created,
  		  	mem.`username` AS userName
		FROM
		  board bd,
		  member mem
		WHERE bd.`member_id` = mem.`id`
		AND bd.status = '1'
		<if test='searchTitle != null and searchTitle != ""'>
		  	AND bd.`title` LIKE  CONCAT('%',#{searchTitle},'%')
		</if>
		ORDER BY bd.`id` DESC
		LIMIT #{pageStartNum}, #{pageSize}
	</select>
	
  	<select id="getBoardListCnt"  parameterType="hashMap" resultType="integer">
 		SELECT
 		   	count(*)
		FROM
		  board bd
		WHERE bd.status = '1'
		<if test='searchTitle != null and searchTitle != ""'>
		  	AND bd.`title` LIKE  CONCAT('%',#{searchTitle},'%')
		</if>
	</select>
	
	<select id="getBoardInfo"  parameterType="hashMap" resultType="com.its.vo.BoardVo">
 		SELECT
 		   	bd.`id` AS boardId,
  		  	bd.`member_id` AS memberId,
  		  	bd.`title`,
  		  	bd.`content`,
  		  	bd.`status`,
  		  	DATE_ADD(bd.`updated`, INTERVAL +9 HOUR) AS updated,
  		  	DATE_ADD(bd.`created`, INTERVAL +9 HOUR) AS created,
  		  	com.`id` AS commentId,
  		  	com.`comment`,
  		  	com.`status` AS commentStatus,
  		  	com.`updated` AS commentUpdated,
  		  	com.`created` AS commentCreated
		FROM
		  board bd
		  LEFT JOIN `board_comment` com
		    ON (
		      bd.`id` = com.`board_id`
		    )
		WHERE bd.`id` = #{boardId}
	</select>
	
	<insert id="insertBoard" parameterType="hashMap">
 		INSERT INTO board
		(
		  `id`,
  		  `member_id`,
  		  `title`,
  		  `content`,
  		  `status`,
  		  `updated`,
  		  `created`
		)
		VALUES(
		   NULL,
		   #{memberId},
		   #{title},
		   #{content},
		   DEFAULT,
		   NOW(),
		   NOW()
		)
	</insert>
	
	<update id="updateBoard" parameterType="hashmap" >
		UPDATE 
		  board 
		SET
		  title = #{title},
		  content = #{content},
		  updated = now()
		WHERE id = #{boardId}
	</update>
	
	<update id="delBoard" parameterType="hashmap" >
		UPDATE 
		  board 
		SET
		  status = '0',
		  updated = now()
		WHERE id = #{boardId}
	</update>

	<select id="getCodeList"  parameterType="hashMap" resultType="com.its.vo.CodeVo">
		SELECT
			`id` AS codeId,
			`code_type` AS codeType,
			`name` AS codeName,
			`status` AS codeStatus,
			`updated`,
			`created`
		FROM
			key_code
		WHERE code_type = #{codeType}
		ORDER BY id ASC
	</select>
	
</mapper>