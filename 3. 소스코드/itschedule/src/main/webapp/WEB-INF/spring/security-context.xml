<beans:beans xmlns="http://www.springframework.org/schema/security"
      xmlns:beans="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:p="http://www.springframework.org/schema/p"
      xmlns:util="http://www.springframework.org/schema/util"
      xmlns:context="http://www.springframework.org/schema/context"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.1.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.2.xsd
            http://www.springframework.org/schema/context
          	http://www.springframework.org/schema/context/spring-context-3.1.xsd">
      
      <http pattern="/resources/**" security="none"></http>
      <http pattern="/js/**" security="none"></http>
      <http pattern="/images/**" security="none"></http>
      <http pattern="/css/**" security="none"></http>
      <http pattern="/scss/**" security="none"></http>
      <http pattern="/fonts/**" security="none"></http>
            
      <!--
      	SPRING 제공 권한
      	ROLE_ANONYMOUS 					: 모든 사용자
		IS_AUTHENTICATED_ANONYMOUSLY 	: 익명 사용자
		IS_AUTHENTICATED_FULLY 			: 인증된 사용자
		IS_AUTHENTICATED_REMEMBERED		: REMEMBERED 사용자
		ROLE_RESTRICTED					: 제한된 사용자
		ROLE_USER 						: 일반 사용자
		ROLE_ADMIN 						: 관리자
		
		CUSTOM 사용 권한
		ROLE_UNE : 개발자 관리자 		-> 모든 권한을 줄 수 있는 최상위 관리자
		ROLE_SUPER : 슈퍼 관리자 	-> 권한을 줄 수 있는  관리자
		ROLE_ADMIN : 현장관리자		-> 관리자 타입
		ROLE_USER : 일반사용자		-> 일반 사용자(사용하지 않음) 	
      -->
      
      <http auto-config='true' use-expressions="false">
    	<!--
      		경로별 필요 권한 정의
      		hasRole 일반 access 차이 조사 필요
      		해당 권한 '만' 접근가능
          -->
          
       		<intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY" />
            <intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
      
            <!-- hasAnyRole -->
           
           <!--
			login-page: 로그인 접근시 호출할 로그인 페이지 URL
			username-parameter: ID 파라미터 이름
			password-parameter: PW 파라미터 이름
			login-processing-url: 로그인 처리할 URL
			default-target-url: 로그인 성공시 이동할 경로
			always-use-default-target: 로그인 성공시 이동할수있도록 고정(조금 더 찾아봐야함)
			authentication-success-handler-ref: 로그인 성공 핸들러 (로그인 완료후 세션처리와 권한 처리 진행)
			authentication-failure-handler-ref: 로그인 실패 핸들러 (로그인 실패후 세션처리와에러 메시지 처리진행)
			-->
            <form-login login-page="/login"
                  username-parameter="userId"
                  password-parameter="userPw"      
           		  login-processing-url="/main"
                  default-target-url="/main"
                  always-use-default-target='true'
                  authentication-success-handler-ref="authSuccessHandler"
                  authentication-failure-handler-ref="authFailuerHandler"
            />

            <anonymous/>
            
            <!--
           invalidate-session: 로그아웃 세션정보 삭제 여부  
           logout-url: 로그아웃 요청할 경로
           logout-success-url: 로그아웃 처리후 처리 URL
             --> 
<!--             <logout invalidate-session="false" logout-url="/logout" logout-success-url="/login"/> -->
            <logout invalidate-session="true" logout-url="/logout" logout-success-url="/login"/>
            
            <!--
            session-management: 중복 로그인 방지
            invalid-session-url: 세션 만료시 이동할 페이지
            max-sessions: 최대 허용 "중복" 세션수
            expired: 중복 로그인시 이동할 페이지
            -->            
            <session-management invalid-session-url="/login">
                  <concurrency-control max-sessions="10" expired-url="/login"/>
            </session-management>
            
             <!-- 
            CSRF(Cross Site Resquest Fosery) 공격 방어 처리 설정
            	CSRF 방어를 위해 POST로 넘기곳 전체에 숨겨진값 보내어 처리
            -->
            <csrf disabled="true"/>
            
            <headers><frame-options policy="SAMEORIGIN"/></headers>
            
    </http>
   
   <!-- login form에서 설정한 핸들러 경로 설정  -->
   	<!-- 인증 성공 -->
   	<beans:bean id="authSuccessHandler" class="com.its.web.security.AuthSuccessHandler"/>
   	<!-- 인증 실패 -->
   	<beans:bean id="authFailuerHandler" class="com.its.web.security.AuthFailuerHandler"/>
   	
   <!--
   		 ROLE_ 접두사 처리하는부분
   		 jsp에서 꺼내서 사용할수있게 설정
   -->
    <beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
   
    <authentication-manager>
          <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager>
     
     
    <beans:bean id="customAuthenticationProvider" class="com.its.web.security.AuthProvider"/> 
    
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans:beans>
